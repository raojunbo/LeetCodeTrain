// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 50;
	objects = {

/* Begin PBXBuildFile section */
		340B0CD025729FDD00AD790A /* hannota.swift in Sources */ = {isa = PBXBuildFile; fileRef = 340B0CCF25729FDD00AD790A /* hannota.swift */; };
		3414B29025391452008A4C67 /* 24.两两交换链表中的节点.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3414B28F25391452008A4C67 /* 24.两两交换链表中的节点.swift */; };
		341D5FAA2635017B0036FDF5 /* 151.翻转字符串里的单词.swift in Sources */ = {isa = PBXBuildFile; fileRef = 341D5FA92635017B0036FDF5 /* 151.翻转字符串里的单词.swift */; };
		341D6066263556CC0036FDF5 /* 3.无重复字符的最长子串.swift in Sources */ = {isa = PBXBuildFile; fileRef = 341D6065263556CC0036FDF5 /* 3.无重复字符的最长子串.swift */; };
		341D6081263576DC0036FDF5 /* 剑指 Offer 47 礼物的最大价值.swift in Sources */ = {isa = PBXBuildFile; fileRef = 341D6080263576DC0036FDF5 /* 剑指 Offer 47 礼物的最大价值.swift */; };
		3424B38E25B0A1EE007FB1E4 /* 198.打家劫舍.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3424B38D25B0A1EE007FB1E4 /* 198.打家劫舍.swift */; };
		3424B39125B0AA80007FB1E4 /* 213.打家劫舍-ii.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3424B39025B0AA80007FB1E4 /* 213.打家劫舍-ii.swift */; };
		3424B3BE25B4012A007FB1E4 /* 121.买卖股票的最佳时机.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3424B3BD25B4012A007FB1E4 /* 121.买卖股票的最佳时机.swift */; };
		3424B3C125B4118C007FB1E4 /* 123.买卖股票的最佳时机-iii.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3424B3C025B4118C007FB1E4 /* 123.买卖股票的最佳时机-iii.swift */; };
		3424B3C425B48A3C007FB1E4 /* 309.最佳买卖股票时机含冷冻期.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3424B3C325B48A3C007FB1E4 /* 309.最佳买卖股票时机含冷冻期.swift */; };
		3424B3C725B49931007FB1E4 /* 188.买卖股票的最佳时机-iv.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3424B3C625B49930007FB1E4 /* 188.买卖股票的最佳时机-iv.swift */; };
		343411C4253C779000887E80 /* 141.环形链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 343411C3253C779000887E80 /* 141.环形链表.swift */; };
		343411C7253C8A3F00887E80 /* 142.环形链表-ii.swift in Sources */ = {isa = PBXBuildFile; fileRef = 343411C6253C8A3F00887E80 /* 142.环形链表-ii.swift */; };
		343411CA253C93E000887E80 /* 25.k-个一组翻转链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 343411C9253C93E000887E80 /* 25.k-个一组翻转链表.swift */; };
		3439ECAA2636A1D100E84926 /* 72.编辑距离.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3439ECA92636A1D100E84926 /* 72.编辑距离.swift */; };
		3439ECAD2636A69200E84926 /* 5.最长回文子串.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3439ECAC2636A69200E84926 /* 5.最长回文子串.swift */; };
		344667B425345E38005654F4 /* 15.三数之和.swift in Sources */ = {isa = PBXBuildFile; fileRef = 344667B325345E38005654F4 /* 15.三数之和.swift */; };
		344EED19254EB7FE00B083FE /* 88.合并两个有序数组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 344EED18254EB7FE00B083FE /* 88.合并两个有序数组.swift */; };
		344EED1C254EC76500B083FE /* 66.加一.swift in Sources */ = {isa = PBXBuildFile; fileRef = 344EED1B254EC76500B083FE /* 66.加一.swift */; };
		344EED1F254ECC7700B083FE /* 20.有效的括号.swift in Sources */ = {isa = PBXBuildFile; fileRef = 344EED1E254ECC7700B083FE /* 20.有效的括号.swift */; };
		344EED22254ED3FE00B083FE /* 155.最小栈.swift in Sources */ = {isa = PBXBuildFile; fileRef = 344EED21254ED3FE00B083FE /* 155.最小栈.swift */; };
		344EED25254EE5FA00B083FE /* 84.柱状图中最大的矩形.swift in Sources */ = {isa = PBXBuildFile; fileRef = 344EED24254EE5FA00B083FE /* 84.柱状图中最大的矩形.swift */; };
		344EED28254EED2C00B083FE /* 239.滑动窗口最大值.swift in Sources */ = {isa = PBXBuildFile; fileRef = 344EED27254EED2C00B083FE /* 239.滑动窗口最大值.swift */; };
		3451406C25371F3500DC3CC0 /* 206.反转链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3451406B25371F3500DC3CC0 /* 206.反转链表.swift */; };
		3453C76D25AAAD1000A15CE3 /* 874.模拟行走机器人.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3453C76C25AAAD1000A15CE3 /* 874.模拟行走机器人.swift */; };
		3453C77025AAD0F100A15CE3 /* 55.跳跃游戏.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3453C76F25AAD0F100A15CE3 /* 55.跳跃游戏.swift */; };
		3453C77325AAE2DE00A15CE3 /* 45.跳跃游戏-ii.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3453C77225AAE2DE00A15CE3 /* 45.跳跃游戏-ii.swift */; };
		3453C77625AAEB3D00A15CE3 /* 32.最长有效括号.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3453C77525AAEB3D00A15CE3 /* 32.最长有效括号.swift */; };
		3453C77925AAFABC00A15CE3 /* 120.三角形最小路径和.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3453C77825AAFABC00A15CE3 /* 120.三角形最小路径和.swift */; };
		3453C77C25AB5D2C00A15CE3 /* 152.乘积最大子数组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3453C77B25AB5D2C00A15CE3 /* 152.乘积最大子数组.swift */; };
		34560509254798E000E27201 /* 189.旋转数组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34560508254798E000E27201 /* 189.旋转数组.swift */; };
		3465AC772647EF5000A8E6D3 /* 栈的总结.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3465AC762647EF5000A8E6D3 /* 栈的总结.swift */; };
		3465E831266224A300DB5C3B /* 17. 电话号码的字母组合.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3465E830266224A300DB5C3B /* 17. 电话号码的字母组合.swift */; };
		3465E83526624BA100DB5C3B /* 101. 对称二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3465E83426624BA100DB5C3B /* 101. 对称二叉树.swift */; };
		3465E8392662529100DB5C3B /* 114. 二叉树展开为链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3465E8382662529100DB5C3B /* 114. 二叉树展开为链表.swift */; };
		3465E83D266390FF00DB5C3B /* 200. 岛屿的数量.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3465E83C266390FF00DB5C3B /* 200. 岛屿的数量.swift */; };
		3465E8402663AC1700DB5C3B /* 207. 可程表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3465E83F2663AC1700DB5C3B /* 207. 可程表.swift */; };
		3465E84326648E0100DB5C3B /* 124. 二叉树中的最大路径和.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3465E84226648E0100DB5C3B /* 124. 二叉树中的最大路径和.swift */; };
		3465E8482664C34600DB5C3B /* 301. 删除无效的括号.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3465E8472664C34600DB5C3B /* 301. 删除无效的括号.swift */; };
		3465E84B2664D70500DB5C3B /* 494.目标和.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3465E84A2664D70500DB5C3B /* 494.目标和.swift */; };
		3465E84F2665C98D00DB5C3B /* 4. 寻找两个正序数组的中位数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3465E84E2665C98D00DB5C3B /* 4. 寻找两个正序数组的中位数.swift */; };
		3465E8532665EC9000DB5C3B /* 240. 搜索二维矩阵2.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3465E8522665EC9000DB5C3B /* 240. 搜索二维矩阵2.swift */; };
		3465E856266614BE00DB5C3B /* 215. 数组中的第k个最大元素.swift in Sources */ = {isa = PBXBuildFile; fileRef = 3465E855266614BE00DB5C3B /* 215. 数组中的第k个最大元素.swift */; };
		346FC0FF2560D4C10020380D /* 94.二叉树的中序遍历.swift in Sources */ = {isa = PBXBuildFile; fileRef = 346FC0FE2560D4C10020380D /* 94.二叉树的中序遍历.swift */; };
		346FC102256120C40020380D /* 144.二叉树的前序遍历.swift in Sources */ = {isa = PBXBuildFile; fileRef = 346FC101256120C40020380D /* 144.二叉树的前序遍历.swift */; };
		346FC1052561220A0020380D /* 590.n叉树的后序遍历.swift in Sources */ = {isa = PBXBuildFile; fileRef = 346FC1042561220A0020380D /* 590.n叉树的后序遍历.swift */; };
		346FC108256126230020380D /* 589.n叉树的前序遍历.swift in Sources */ = {isa = PBXBuildFile; fileRef = 346FC107256126230020380D /* 589.n叉树的前序遍历.swift */; };
		346FC10B256127E90020380D /* 429.n叉树的层序遍历.swift in Sources */ = {isa = PBXBuildFile; fileRef = 346FC10A256127E90020380D /* 429.n叉树的层序遍历.swift */; };
		346FC10E256141310020380D /* 22.括号生成.swift in Sources */ = {isa = PBXBuildFile; fileRef = 346FC10D256141310020380D /* 22.括号生成.swift */; };
		347E0A67259F2C51009138AA /* 53.最大子序和.swift in Sources */ = {isa = PBXBuildFile; fileRef = 347E0A66259F2C51009138AA /* 53.最大子序和.swift */; };
		347E0A6A259F68DD009138AA /* 300.最长上升子序列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 347E0A69259F68DD009138AA /* 300.最长上升子序列.swift */; };
		347E0A6D25A013B5009138AA /* 1143.最长公共子序列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 347E0A6C25A013B5009138AA /* 1143.最长公共子序列.swift */; };
		347E0A7025A185C2009138AA /* 1143-2.最长公共子串.swift in Sources */ = {isa = PBXBuildFile; fileRef = 347E0A6F25A185C2009138AA /* 1143-2.最长公共子串.swift */; };
		347E0AE125A1AF02009138AA /* 1143_3背包问题01.swift in Sources */ = {isa = PBXBuildFile; fileRef = 347E0AE025A1AF02009138AA /* 1143_3背包问题01.swift */; };
		347E0B8625A4B98F009138AA /* 69.x-的平方根.swift in Sources */ = {isa = PBXBuildFile; fileRef = 347E0B8525A4B98F009138AA /* 69.x-的平方根.swift */; };
		347E0B8925A544A6009138AA /* 367.有效的完全平方数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 347E0B8825A544A6009138AA /* 367.有效的完全平方数.swift */; };
		34977AA025C68F440040C7C1 /* 33.搜索旋转排序数组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34977A9F25C68F440040C7C1 /* 33.搜索旋转排序数组.swift */; };
		34977AA325C6A4F20040C7C1 /* 74.搜索二维矩阵.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34977AA225C6A4F20040C7C1 /* 74.搜索二维矩阵.swift */; };
		34977AA625C6B1B90040C7C1 /* 153.寻找旋转排序数组中的最小值.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34977AA525C6B1B90040C7C1 /* 153.寻找旋转排序数组中的最小值.swift */; };
		34977AAD25C6DFB60040C7C1 /* 169.多数元素.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34977AAC25C6DFB60040C7C1 /* 169.多数元素.swift */; };
		34983F542598DBD700A3FEAD /* BruteFore01.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34983F532598DBD700A3FEAD /* BruteFore01.swift */; };
		34A5AD39254A3359006CB80F /* 21.合并两个有序链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34A5AD38254A3359006CB80F /* 21.合并两个有序链表.swift */; };
		34A783E525583FD9002A5294 /* 641.设计循环双端队列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34A783E425583FD9002A5294 /* 641.设计循环双端队列.swift */; };
		34AA7C672568F8A0007C56C0 /* 111.二叉树的最小深度.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34AA7C662568F8A0007C56C0 /* 111.二叉树的最小深度.swift */; };
		34AA7C6A256930A9007C56C0 /* 297.二叉树的序列化与反序列化.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34AA7C69256930A9007C56C0 /* 297.二叉树的序列化与反序列化.swift */; };
		34AA7C6D256A0641007C56C0 /* 236.二叉树的最近公共祖先.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34AA7C6C256A0641007C56C0 /* 236.二叉树的最近公共祖先.swift */; };
		34AA7C70256A8493007C56C0 /* 105.从前序与中序遍历序列构造二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34AA7C6F256A8493007C56C0 /* 105.从前序与中序遍历序列构造二叉树.swift */; };
		34AA7C73256A9B3D007C56C0 /* 77.组合.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34AA7C72256A9B3D007C56C0 /* 77.组合.swift */; };
		34AA7C76256A9D42007C56C0 /* 102.二叉树的层次遍历.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34AA7C75256A9D42007C56C0 /* 102.二叉树的层次遍历.swift */; };
		34AA7C79256AA328007C56C0 /* 433.最小基因变化.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34AA7C78256AA328007C56C0 /* 433.最小基因变化.swift */; };
		34AA7C7C256ABA5E007C56C0 /* 515.在每个树行中找最大值.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34AA7C7B256ABA5E007C56C0 /* 515.在每个树行中找最大值.swift */; };
		34AA7C7F256ABE24007C56C0 /* 322.零钱兑换.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34AA7C7E256ABE24007C56C0 /* 322.零钱兑换.swift */; };
		34CBFB8825A60FD20039F4AE /* 860.柠檬水找零.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34CBFB8725A60FD20039F4AE /* 860.柠檬水找零.swift */; };
		34CBFB8B25A685080039F4AE /* 122.买卖股票的最佳时机-ii.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34CBFB8A25A685080039F4AE /* 122.买卖股票的最佳时机-ii.swift */; };
		34CBFB8E25A6AA160039F4AE /* 455.分发饼干.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34CBFB8D25A6AA160039F4AE /* 455.分发饼干.swift */; };
		34D0C7AA264794C7005BF9ED /* 86. 分隔链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34D0C7A9264794C7005BF9ED /* 86. 分隔链表.swift */; };
		34D0C7AD2647D3EC005BF9ED /* 234. 回文链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34D0C7AC2647D3EC005BF9ED /* 234. 回文链表.swift */; };
		34DD1EAB266B563400C69DA5 /* 96. 不同的二叉搜索树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34DD1EAA266B563400C69DA5 /* 96. 不同的二叉搜索树.swift */; };
		34DD1EAE266B625600C69DA5 /* 139. 单词拆分.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34DD1EAD266B625600C69DA5 /* 139. 单词拆分.swift */; };
		34E8E6E225735F2000D64401 /* 51.n皇后.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34E8E6E125735F2000D64401 /* 51.n皇后.swift */; };
		34ED2825266DFE2A006D4020 /* 221. 最大正方形.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34ED2824266DFE2A006D4020 /* 221. 最大正方形.swift */; };
		34ED2828266E46EE006D4020 /* 85. 最大矩形.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34ED2827266E46EE006D4020 /* 85. 最大矩形.swift */; };
		34ED282B266E5551006D4020 /* 647. 回文字串.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34ED282A266E5551006D4020 /* 647. 回文字串.swift */; };
		34ED282E266F0B4F006D4020 /* 279. 完全平方数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34ED282D266F0B4F006D4020 /* 279. 完全平方数.swift */; };
		34ED2838266F5BA9006D4020 /* 动态规划笔记.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34ED2837266F5BA9006D4020 /* 动态规划笔记.swift */; };
		34ED2841266F6081006D4020 /* 509. 斐波那契数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34ED2840266F6081006D4020 /* 509. 斐波那契数.swift */; };
		34F08E06264000AA00E50E61 /* 剑指 Offer 7 重建二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08E05264000AA00E50E61 /* 剑指 Offer 7 重建二叉树.swift */; };
		34F08E0A2640D50900E50E61 /* 剑指 Offer 8 二叉树的下一个节点.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08E092640D50900E50E61 /* 剑指 Offer 8 二叉树的下一个节点.swift */; };
		34F08E0D2640DA1100E50E61 /* 剑指 Offer 26 树的子结构.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08E0C2640DA1100E50E61 /* 剑指 Offer 26 树的子结构.swift */; };
		34F08E102641671400E50E61 /* 剑指 Offer 32 从上到下打印二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08E0F2641671400E50E61 /* 剑指 Offer 32 从上到下打印二叉树.swift */; };
		34F08E132641873700E50E61 /* 剑指 Offer 32 从上到下打印二叉树 2.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08E122641873700E50E61 /* 剑指 Offer 32 从上到下打印二叉树 2.swift */; };
		34F08E1626419AE400E50E61 /* 剑指 Offer 32 从上到下打印二叉树3.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08E1526419AE400E50E61 /* 剑指 Offer 32 从上到下打印二叉树3.swift */; };
		34F08E1926419D0600E50E61 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08E1826419D0600E50E61 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.swift */; };
		34F08E1C2642455D00E50E61 /* 剑指 Offer 34. 二叉树中和为某一值的路径.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08E1B2642455D00E50E61 /* 剑指 Offer 34. 二叉树中和为某一值的路径.swift */; };
		34F08E1F26427A6C00E50E61 /* 剑指 Offer 37. 序列化二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08E1E26427A6C00E50E61 /* 剑指 Offer 37. 序列化二叉树.swift */; };
		34F08E222642A6C100E50E61 /* 剑指 Offer 54. 二叉搜索树的第k大节点.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08E212642A6C100E50E61 /* 剑指 Offer 54. 二叉搜索树的第k大节点.swift */; };
		34F08E252642AEF500E50E61 /* 剑指 Offer 55 - I. 二叉树的深度.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08E242642AEF500E50E61 /* 剑指 Offer 55 - I. 二叉树的深度.swift */; };
		34F08E282642B0E600E50E61 /* 剑指 Offer 55 - II. 平衡二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08E272642B0E600E50E61 /* 剑指 Offer 55 - II. 平衡二叉树.swift */; };
		34F08E2B2642CA9600E50E61 /* 剑指 Offer 14- I. 剪绳子.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08E2A2642CA9600E50E61 /* 剑指 Offer 14- I. 剪绳子.swift */; };
		34F08E8F26439A3100E50E61 /* 75.颜色分类.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08E8E26439A3100E50E61 /* 75.颜色分类.swift */; };
		34F08E922643CCFC00E50E61 /* 面试题 16.16. 部分排序.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08E912643CCFC00E50E61 /* 面试题 16.16. 部分排序.swift */; };
		34F08E952643E64F00E50E61 /* 数组总结.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08E942643E64F00E50E61 /* 数组总结.swift */; };
		34F08E982643E90300E50E61 /* 链表总结.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08E972643E90300E50E61 /* 链表总结.swift */; };
		34F08E9B2643E9A700E50E61 /* 203. 移除链表元素.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08E9A2643E9A700E50E61 /* 203. 移除链表元素.swift */; };
		34F08F432644AEA100E50E61 /* 2. 两数相加.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08F422644AEA100E50E61 /* 2. 两数相加.swift */; };
		34F08F462644D05300E50E61 /* 160. 相交链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F08F452644D05300E50E61 /* 160. 相交链表.swift */; };
		34F097CC2650D61C00FDEC05 /* 739.每日温度.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F097CB2650D61C00FDEC05 /* 739.每日温度.swift */; };
		34F097D02651006700FDEC05 /* 42. 接雨水.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F097CF2651006700FDEC05 /* 42. 接雨水.swift */; };
		34F097D426511A7C00FDEC05 /* 队列的总结.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F097D326511A7C00FDEC05 /* 队列的总结.swift */; };
		34F797B826564EDC00D09696 /* 34. 在排序数组中查找元素的第一个和最后一个位置.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F797B726564EDC00D09696 /* 34. 在排序数组中查找元素的第一个和最后一个位置.swift */; };
		34F797BB265664BB00D09696 /* 19. 删除链表的倒数第N个结点.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F797BA265664BB00D09696 /* 19. 删除链表的倒数第N个结点.swift */; };
		34F797BE26566A1F00D09696 /* 39. 组合总和.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F797BD26566A1F00D09696 /* 39. 组合总和.swift */; };
		34F797C12657630300D09696 /* 48. 旋转图像.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F797C02657630300D09696 /* 48. 旋转图像.swift */; };
		34F797C42657708500D09696 /* 56. 合并区间.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F797C32657708500D09696 /* 56. 合并区间.swift */; };
		34F797C72658A86000D09696 /* 62. 不同路径.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F797C62658A86000D09696 /* 62. 不同路径.swift */; };
		34F797CA2658B43E00D09696 /* 64. 最小路径和.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F797C92658B43E00D09696 /* 64. 最小路径和.swift */; };
		34F797CD2658B7C900D09696 /* 78. 子集.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F797CC2658B7C900D09696 /* 78. 子集.swift */; };
		34F797D02658EAC800D09696 /* 79. 单词搜索.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F797CF2658EAC800D09696 /* 79. 单词搜索.swift */; };
		34F797D326590BBD00D09696 /* 287 选找重复数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F797D226590BBD00D09696 /* 287 选找重复数.swift */; };
		34F797D6265923B000D09696 /* 448. 找到所有数组中消失的数字.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F797D5265923B000D09696 /* 448. 找到所有数组中消失的数字.swift */; };
		34F797D9265A0F2300D09696 /* 560. 和为k的子数组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F797D8265A0F2300D09696 /* 560. 和为k的子数组.swift */; };
		34F797DC265A3BBF00D09696 /* 23. 合并K个升序链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F797DB265A3BBF00D09696 /* 23. 合并K个升序链表.swift */; };
		34F797DF265A4D1C00D09696 /* 148. 排序链表.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34F797DE265A4D1C00D09696 /* 148. 排序链表.swift */; };
		34FB7A022561767B00DE1A5A /* 226.翻转二叉树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34FB7A012561767B00DE1A5A /* 226.翻转二叉树.swift */; };
		34FB7A05256180DE00DE1A5A /* 98.验证二叉搜索树.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34FB7A04256180DE00DE1A5A /* 98.验证二叉搜索树.swift */; };
		34FB7A0825618EA500DE1A5A /* 104.二叉树的最大深度.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34FB7A0725618EA500DE1A5A /* 104.二叉树的最大深度.swift */; };
		34FCA56B255CAAFB002BE4A8 /* 242.有效的字母异位词.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34FCA56A255CAAFB002BE4A8 /* 242.有效的字母异位词.swift */; };
		34FCA56E255CC6ED002BE4A8 /* 49.字母异位词分组.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34FCA56D255CC6ED002BE4A8 /* 49.字母异位词分组.swift */; };
		34FEAF8F2667B23E00548EC8 /* Train. 大顶堆.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34FEAF8E2667B23E00548EC8 /* Train. 大顶堆.swift */; };
		34FEAF962668C1B000548EC8 /* Train. 批量建堆.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34FEAF952668C1B000548EC8 /* Train. 批量建堆.swift */; };
		34FEAF9A2668D05C00548EC8 /* Train. 小顶堆.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34FEAF992668D05C00548EC8 /* Train. 小顶堆.swift */; };
		34FEAF9E2668DBB100548EC8 /* 347. 前k个高频元素.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34FEAF9D2668DBB100548EC8 /* 347. 前k个高频元素.swift */; };
		34FEAFA12669FD0A00548EC8 /* Train. 快速排序.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34FEAFA02669FD0A00548EC8 /* Train. 快速排序.swift */; };
		34FEAFA5266A266D00548EC8 /* 338. 比特位计数.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34FEAFA4266A266D00548EC8 /* 338. 比特位计数.swift */; };
		34FEB49325409D5700B3A94E /* 26.删除排序数组中的重复项.swift in Sources */ = {isa = PBXBuildFile; fileRef = 34FEB49225409D5700B3A94E /* 26.删除排序数组中的重复项.swift */; };
		4BB4BC6F266F748200C4BBC9 /* 746. 使用最小花费爬楼梯.swift in Sources */ = {isa = PBXBuildFile; fileRef = 4BB4BC6E266F748200C4BBC9 /* 746. 使用最小花费爬楼梯.swift */; };
		ED380A91251DC179004FD591 /* 1.两数之和.swift in Sources */ = {isa = PBXBuildFile; fileRef = ED380A90251DC179004FD591 /* 1.两数之和.swift */; };
		ED380A94251DD221004FD591 /* 11.盛最多水的容器.swift in Sources */ = {isa = PBXBuildFile; fileRef = ED380A93251DD221004FD591 /* 11.盛最多水的容器.swift */; };
		ED380A97251DDFB4004FD591 /* 283.移动零.swift in Sources */ = {isa = PBXBuildFile; fileRef = ED380A96251DDFB4004FD591 /* 283.移动零.swift */; };
		ED380A9A251DEDB2004FD591 /* 70.爬楼梯.swift in Sources */ = {isa = PBXBuildFile; fileRef = ED380A99251DEDB2004FD591 /* 70.爬楼梯.swift */; };
		ED5529132514B4C800B225F8 /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = ED5529122514B4C800B225F8 /* main.swift */; };
		ED55291A2514B4F800B225F8 /* 146.lru缓存机制.swift in Sources */ = {isa = PBXBuildFile; fileRef = ED5529192514B4F800B225F8 /* 146.lru缓存机制.swift */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		ED55290D2514B4C800B225F8 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		340B0CCF25729FDD00AD790A /* hannota.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = hannota.swift; sourceTree = "<group>"; };
		3414B28F25391452008A4C67 /* 24.两两交换链表中的节点.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "24.两两交换链表中的节点.swift"; sourceTree = "<group>"; };
		341D5FA92635017B0036FDF5 /* 151.翻转字符串里的单词.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "151.翻转字符串里的单词.swift"; sourceTree = "<group>"; };
		341D6065263556CC0036FDF5 /* 3.无重复字符的最长子串.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "3.无重复字符的最长子串.swift"; sourceTree = "<group>"; };
		341D6080263576DC0036FDF5 /* 剑指 Offer 47 礼物的最大价值.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 47 礼物的最大价值.swift"; sourceTree = "<group>"; };
		3424B38D25B0A1EE007FB1E4 /* 198.打家劫舍.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "198.打家劫舍.swift"; sourceTree = "<group>"; };
		3424B39025B0AA80007FB1E4 /* 213.打家劫舍-ii.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "213.打家劫舍-ii.swift"; sourceTree = "<group>"; };
		3424B3BD25B4012A007FB1E4 /* 121.买卖股票的最佳时机.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "121.买卖股票的最佳时机.swift"; sourceTree = "<group>"; };
		3424B3C025B4118C007FB1E4 /* 123.买卖股票的最佳时机-iii.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "123.买卖股票的最佳时机-iii.swift"; sourceTree = "<group>"; };
		3424B3C325B48A3C007FB1E4 /* 309.最佳买卖股票时机含冷冻期.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "309.最佳买卖股票时机含冷冻期.swift"; sourceTree = "<group>"; };
		3424B3C625B49930007FB1E4 /* 188.买卖股票的最佳时机-iv.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "188.买卖股票的最佳时机-iv.swift"; sourceTree = "<group>"; };
		343411C3253C779000887E80 /* 141.环形链表.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "141.环形链表.swift"; sourceTree = "<group>"; };
		343411C6253C8A3F00887E80 /* 142.环形链表-ii.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "142.环形链表-ii.swift"; sourceTree = "<group>"; };
		343411C9253C93E000887E80 /* 25.k-个一组翻转链表.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "25.k-个一组翻转链表.swift"; sourceTree = "<group>"; };
		3439DBD2254DAF2200B88924 /* LeetCodeTrain-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "LeetCodeTrain-Bridging-Header.h"; sourceTree = "<group>"; };
		3439ECA92636A1D100E84926 /* 72.编辑距离.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "72.编辑距离.swift"; sourceTree = "<group>"; };
		3439ECAC2636A69200E84926 /* 5.最长回文子串.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "5.最长回文子串.swift"; sourceTree = "<group>"; };
		344667B325345E38005654F4 /* 15.三数之和.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "15.三数之和.swift"; sourceTree = "<group>"; };
		344EED18254EB7FE00B083FE /* 88.合并两个有序数组.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "88.合并两个有序数组.swift"; sourceTree = "<group>"; };
		344EED1B254EC76500B083FE /* 66.加一.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "66.加一.swift"; sourceTree = "<group>"; };
		344EED1E254ECC7700B083FE /* 20.有效的括号.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "20.有效的括号.swift"; sourceTree = "<group>"; };
		344EED21254ED3FE00B083FE /* 155.最小栈.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "155.最小栈.swift"; sourceTree = "<group>"; };
		344EED24254EE5FA00B083FE /* 84.柱状图中最大的矩形.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "84.柱状图中最大的矩形.swift"; sourceTree = "<group>"; };
		344EED27254EED2C00B083FE /* 239.滑动窗口最大值.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "239.滑动窗口最大值.swift"; sourceTree = "<group>"; };
		3451406B25371F3500DC3CC0 /* 206.反转链表.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "206.反转链表.swift"; sourceTree = "<group>"; };
		3453C76C25AAAD1000A15CE3 /* 874.模拟行走机器人.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "874.模拟行走机器人.swift"; sourceTree = "<group>"; };
		3453C76F25AAD0F100A15CE3 /* 55.跳跃游戏.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "55.跳跃游戏.swift"; sourceTree = "<group>"; };
		3453C77225AAE2DE00A15CE3 /* 45.跳跃游戏-ii.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "45.跳跃游戏-ii.swift"; sourceTree = "<group>"; };
		3453C77525AAEB3D00A15CE3 /* 32.最长有效括号.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "32.最长有效括号.swift"; sourceTree = "<group>"; };
		3453C77825AAFABC00A15CE3 /* 120.三角形最小路径和.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "120.三角形最小路径和.swift"; sourceTree = "<group>"; };
		3453C77B25AB5D2C00A15CE3 /* 152.乘积最大子数组.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "152.乘积最大子数组.swift"; sourceTree = "<group>"; };
		34560508254798E000E27201 /* 189.旋转数组.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "189.旋转数组.swift"; sourceTree = "<group>"; };
		3465AC762647EF5000A8E6D3 /* 栈的总结.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "栈的总结.swift"; sourceTree = "<group>"; };
		3465E830266224A300DB5C3B /* 17. 电话号码的字母组合.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "17. 电话号码的字母组合.swift"; sourceTree = "<group>"; };
		3465E83426624BA100DB5C3B /* 101. 对称二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "101. 对称二叉树.swift"; sourceTree = "<group>"; };
		3465E8382662529100DB5C3B /* 114. 二叉树展开为链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "114. 二叉树展开为链表.swift"; sourceTree = "<group>"; };
		3465E83C266390FF00DB5C3B /* 200. 岛屿的数量.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "200. 岛屿的数量.swift"; sourceTree = "<group>"; };
		3465E83F2663AC1700DB5C3B /* 207. 可程表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "207. 可程表.swift"; sourceTree = "<group>"; };
		3465E84226648E0100DB5C3B /* 124. 二叉树中的最大路径和.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "124. 二叉树中的最大路径和.swift"; sourceTree = "<group>"; };
		3465E8472664C34600DB5C3B /* 301. 删除无效的括号.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "301. 删除无效的括号.swift"; sourceTree = "<group>"; };
		3465E84A2664D70500DB5C3B /* 494.目标和.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "494.目标和.swift"; sourceTree = "<group>"; };
		3465E84E2665C98D00DB5C3B /* 4. 寻找两个正序数组的中位数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "4. 寻找两个正序数组的中位数.swift"; sourceTree = "<group>"; };
		3465E8522665EC9000DB5C3B /* 240. 搜索二维矩阵2.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "240. 搜索二维矩阵2.swift"; sourceTree = "<group>"; };
		3465E855266614BE00DB5C3B /* 215. 数组中的第k个最大元素.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "215. 数组中的第k个最大元素.swift"; sourceTree = "<group>"; };
		346FC0FE2560D4C10020380D /* 94.二叉树的中序遍历.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "94.二叉树的中序遍历.swift"; sourceTree = "<group>"; };
		346FC101256120C40020380D /* 144.二叉树的前序遍历.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "144.二叉树的前序遍历.swift"; sourceTree = "<group>"; };
		346FC1042561220A0020380D /* 590.n叉树的后序遍历.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "590.n叉树的后序遍历.swift"; sourceTree = "<group>"; };
		346FC107256126230020380D /* 589.n叉树的前序遍历.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "589.n叉树的前序遍历.swift"; sourceTree = "<group>"; };
		346FC10A256127E90020380D /* 429.n叉树的层序遍历.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "429.n叉树的层序遍历.swift"; sourceTree = "<group>"; };
		346FC10D256141310020380D /* 22.括号生成.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "22.括号生成.swift"; sourceTree = "<group>"; };
		347E0A66259F2C51009138AA /* 53.最大子序和.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "53.最大子序和.swift"; sourceTree = "<group>"; };
		347E0A69259F68DD009138AA /* 300.最长上升子序列.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "300.最长上升子序列.swift"; sourceTree = "<group>"; };
		347E0A6C25A013B5009138AA /* 1143.最长公共子序列.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "1143.最长公共子序列.swift"; sourceTree = "<group>"; };
		347E0A6F25A185C2009138AA /* 1143-2.最长公共子串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1143-2.最长公共子串.swift"; sourceTree = "<group>"; };
		347E0AE025A1AF02009138AA /* 1143_3背包问题01.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1143_3背包问题01.swift"; sourceTree = "<group>"; };
		347E0B8525A4B98F009138AA /* 69.x-的平方根.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "69.x-的平方根.swift"; sourceTree = "<group>"; };
		347E0B8825A544A6009138AA /* 367.有效的完全平方数.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "367.有效的完全平方数.swift"; sourceTree = "<group>"; };
		34977A9F25C68F440040C7C1 /* 33.搜索旋转排序数组.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "33.搜索旋转排序数组.swift"; sourceTree = "<group>"; };
		34977AA225C6A4F20040C7C1 /* 74.搜索二维矩阵.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "74.搜索二维矩阵.swift"; sourceTree = "<group>"; };
		34977AA525C6B1B90040C7C1 /* 153.寻找旋转排序数组中的最小值.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "153.寻找旋转排序数组中的最小值.swift"; sourceTree = "<group>"; };
		34977AAC25C6DFB60040C7C1 /* 169.多数元素.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "169.多数元素.swift"; sourceTree = "<group>"; };
		34983F532598DBD700A3FEAD /* BruteFore01.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BruteFore01.swift; sourceTree = "<group>"; };
		34A5AD38254A3359006CB80F /* 21.合并两个有序链表.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "21.合并两个有序链表.swift"; sourceTree = "<group>"; };
		34A783E425583FD9002A5294 /* 641.设计循环双端队列.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "641.设计循环双端队列.swift"; sourceTree = "<group>"; };
		34AA7C662568F8A0007C56C0 /* 111.二叉树的最小深度.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "111.二叉树的最小深度.swift"; sourceTree = "<group>"; };
		34AA7C69256930A9007C56C0 /* 297.二叉树的序列化与反序列化.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "297.二叉树的序列化与反序列化.swift"; sourceTree = "<group>"; };
		34AA7C6C256A0641007C56C0 /* 236.二叉树的最近公共祖先.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "236.二叉树的最近公共祖先.swift"; sourceTree = "<group>"; };
		34AA7C6F256A8493007C56C0 /* 105.从前序与中序遍历序列构造二叉树.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "105.从前序与中序遍历序列构造二叉树.swift"; sourceTree = "<group>"; };
		34AA7C72256A9B3D007C56C0 /* 77.组合.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "77.组合.swift"; sourceTree = "<group>"; };
		34AA7C75256A9D42007C56C0 /* 102.二叉树的层次遍历.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "102.二叉树的层次遍历.swift"; sourceTree = "<group>"; };
		34AA7C78256AA328007C56C0 /* 433.最小基因变化.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "433.最小基因变化.swift"; sourceTree = "<group>"; };
		34AA7C7B256ABA5E007C56C0 /* 515.在每个树行中找最大值.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "515.在每个树行中找最大值.swift"; sourceTree = "<group>"; };
		34AA7C7E256ABE24007C56C0 /* 322.零钱兑换.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "322.零钱兑换.swift"; sourceTree = "<group>"; };
		34CBFB8725A60FD20039F4AE /* 860.柠檬水找零.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "860.柠檬水找零.swift"; sourceTree = "<group>"; };
		34CBFB8A25A685080039F4AE /* 122.买卖股票的最佳时机-ii.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "122.买卖股票的最佳时机-ii.swift"; sourceTree = "<group>"; };
		34CBFB8D25A6AA160039F4AE /* 455.分发饼干.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "455.分发饼干.swift"; sourceTree = "<group>"; };
		34D0C7A9264794C7005BF9ED /* 86. 分隔链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "86. 分隔链表.swift"; sourceTree = "<group>"; };
		34D0C7AC2647D3EC005BF9ED /* 234. 回文链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "234. 回文链表.swift"; sourceTree = "<group>"; };
		34DD1EAA266B563400C69DA5 /* 96. 不同的二叉搜索树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "96. 不同的二叉搜索树.swift"; sourceTree = "<group>"; };
		34DD1EAD266B625600C69DA5 /* 139. 单词拆分.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "139. 单词拆分.swift"; sourceTree = "<group>"; };
		34E8E6E125735F2000D64401 /* 51.n皇后.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "51.n皇后.swift"; sourceTree = "<group>"; };
		34ED2824266DFE2A006D4020 /* 221. 最大正方形.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "221. 最大正方形.swift"; sourceTree = "<group>"; };
		34ED2827266E46EE006D4020 /* 85. 最大矩形.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "85. 最大矩形.swift"; sourceTree = "<group>"; };
		34ED282A266E5551006D4020 /* 647. 回文字串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "647. 回文字串.swift"; sourceTree = "<group>"; };
		34ED282D266F0B4F006D4020 /* 279. 完全平方数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "279. 完全平方数.swift"; sourceTree = "<group>"; };
		34ED2837266F5BA9006D4020 /* 动态规划笔记.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "动态规划笔记.swift"; sourceTree = "<group>"; };
		34ED2840266F6081006D4020 /* 509. 斐波那契数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "509. 斐波那契数.swift"; sourceTree = "<group>"; };
		34F08E05264000AA00E50E61 /* 剑指 Offer 7 重建二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 7 重建二叉树.swift"; sourceTree = "<group>"; };
		34F08E092640D50900E50E61 /* 剑指 Offer 8 二叉树的下一个节点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 8 二叉树的下一个节点.swift"; sourceTree = "<group>"; };
		34F08E0C2640DA1100E50E61 /* 剑指 Offer 26 树的子结构.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 26 树的子结构.swift"; sourceTree = "<group>"; };
		34F08E0F2641671400E50E61 /* 剑指 Offer 32 从上到下打印二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 32 从上到下打印二叉树.swift"; sourceTree = "<group>"; };
		34F08E122641873700E50E61 /* 剑指 Offer 32 从上到下打印二叉树 2.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 32 从上到下打印二叉树 2.swift"; sourceTree = "<group>"; };
		34F08E1526419AE400E50E61 /* 剑指 Offer 32 从上到下打印二叉树3.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 32 从上到下打印二叉树3.swift"; sourceTree = "<group>"; };
		34F08E1826419D0600E50E61 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 33. 二叉搜索树的后序遍历序列.swift"; sourceTree = "<group>"; };
		34F08E1B2642455D00E50E61 /* 剑指 Offer 34. 二叉树中和为某一值的路径.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 34. 二叉树中和为某一值的路径.swift"; sourceTree = "<group>"; };
		34F08E1E26427A6C00E50E61 /* 剑指 Offer 37. 序列化二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 37. 序列化二叉树.swift"; sourceTree = "<group>"; };
		34F08E212642A6C100E50E61 /* 剑指 Offer 54. 二叉搜索树的第k大节点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 54. 二叉搜索树的第k大节点.swift"; sourceTree = "<group>"; };
		34F08E242642AEF500E50E61 /* 剑指 Offer 55 - I. 二叉树的深度.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 55 - I. 二叉树的深度.swift"; sourceTree = "<group>"; };
		34F08E272642B0E600E50E61 /* 剑指 Offer 55 - II. 平衡二叉树.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 55 - II. 平衡二叉树.swift"; sourceTree = "<group>"; };
		34F08E2A2642CA9600E50E61 /* 剑指 Offer 14- I. 剪绳子.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "剑指 Offer 14- I. 剪绳子.swift"; sourceTree = "<group>"; };
		34F08E8E26439A3100E50E61 /* 75.颜色分类.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; name = "75.颜色分类.swift"; path = "LeetCodeTrain/75.颜色分类.swift"; sourceTree = SOURCE_ROOT; };
		34F08E912643CCFC00E50E61 /* 面试题 16.16. 部分排序.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "面试题 16.16. 部分排序.swift"; sourceTree = "<group>"; };
		34F08E942643E64F00E50E61 /* 数组总结.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "数组总结.swift"; sourceTree = "<group>"; };
		34F08E972643E90300E50E61 /* 链表总结.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "链表总结.swift"; sourceTree = "<group>"; };
		34F08E9A2643E9A700E50E61 /* 203. 移除链表元素.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "203. 移除链表元素.swift"; sourceTree = "<group>"; };
		34F08F422644AEA100E50E61 /* 2. 两数相加.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "2. 两数相加.swift"; sourceTree = "<group>"; };
		34F08F452644D05300E50E61 /* 160. 相交链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "160. 相交链表.swift"; sourceTree = "<group>"; };
		34F097CB2650D61C00FDEC05 /* 739.每日温度.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "739.每日温度.swift"; sourceTree = "<group>"; };
		34F097CF2651006700FDEC05 /* 42. 接雨水.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "42. 接雨水.swift"; sourceTree = "<group>"; };
		34F097D326511A7C00FDEC05 /* 队列的总结.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "队列的总结.swift"; sourceTree = "<group>"; };
		34F797B726564EDC00D09696 /* 34. 在排序数组中查找元素的第一个和最后一个位置.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "34. 在排序数组中查找元素的第一个和最后一个位置.swift"; sourceTree = "<group>"; };
		34F797BA265664BB00D09696 /* 19. 删除链表的倒数第N个结点.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "19. 删除链表的倒数第N个结点.swift"; sourceTree = "<group>"; };
		34F797BD26566A1F00D09696 /* 39. 组合总和.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "39. 组合总和.swift"; sourceTree = "<group>"; };
		34F797C02657630300D09696 /* 48. 旋转图像.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "48. 旋转图像.swift"; sourceTree = "<group>"; };
		34F797C32657708500D09696 /* 56. 合并区间.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "56. 合并区间.swift"; sourceTree = "<group>"; };
		34F797C62658A86000D09696 /* 62. 不同路径.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "62. 不同路径.swift"; sourceTree = "<group>"; };
		34F797C92658B43E00D09696 /* 64. 最小路径和.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "64. 最小路径和.swift"; sourceTree = "<group>"; };
		34F797CC2658B7C900D09696 /* 78. 子集.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "78. 子集.swift"; sourceTree = "<group>"; };
		34F797CF2658EAC800D09696 /* 79. 单词搜索.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "79. 单词搜索.swift"; sourceTree = "<group>"; };
		34F797D226590BBD00D09696 /* 287 选找重复数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "287 选找重复数.swift"; sourceTree = "<group>"; };
		34F797D5265923B000D09696 /* 448. 找到所有数组中消失的数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "448. 找到所有数组中消失的数字.swift"; sourceTree = "<group>"; };
		34F797D8265A0F2300D09696 /* 560. 和为k的子数组.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "560. 和为k的子数组.swift"; sourceTree = "<group>"; };
		34F797DB265A3BBF00D09696 /* 23. 合并K个升序链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "23. 合并K个升序链表.swift"; sourceTree = "<group>"; };
		34F797DE265A4D1C00D09696 /* 148. 排序链表.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "148. 排序链表.swift"; sourceTree = "<group>"; };
		34FB7A012561767B00DE1A5A /* 226.翻转二叉树.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "226.翻转二叉树.swift"; sourceTree = "<group>"; };
		34FB7A04256180DE00DE1A5A /* 98.验证二叉搜索树.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "98.验证二叉搜索树.swift"; sourceTree = "<group>"; };
		34FB7A0725618EA500DE1A5A /* 104.二叉树的最大深度.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "104.二叉树的最大深度.swift"; sourceTree = "<group>"; };
		34FCA56A255CAAFB002BE4A8 /* 242.有效的字母异位词.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "242.有效的字母异位词.swift"; sourceTree = "<group>"; };
		34FCA56D255CC6ED002BE4A8 /* 49.字母异位词分组.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "49.字母异位词分组.swift"; sourceTree = "<group>"; };
		34FEAF8E2667B23E00548EC8 /* Train. 大顶堆.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Train. 大顶堆.swift"; sourceTree = "<group>"; };
		34FEAF952668C1B000548EC8 /* Train. 批量建堆.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Train. 批量建堆.swift"; sourceTree = "<group>"; };
		34FEAF992668D05C00548EC8 /* Train. 小顶堆.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "Train. 小顶堆.swift"; sourceTree = "<group>"; };
		34FEAF9D2668DBB100548EC8 /* 347. 前k个高频元素.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "347. 前k个高频元素.swift"; sourceTree = "<group>"; };
		34FEAFA02669FD0A00548EC8 /* Train. 快速排序.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "Train. 快速排序.swift"; sourceTree = "<group>"; };
		34FEAFA4266A266D00548EC8 /* 338. 比特位计数.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "338. 比特位计数.swift"; sourceTree = "<group>"; };
		34FEB49225409D5700B3A94E /* 26.删除排序数组中的重复项.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "26.删除排序数组中的重复项.swift"; sourceTree = "<group>"; };
		4BB4BC6E266F748200C4BBC9 /* 746. 使用最小花费爬楼梯.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "746. 使用最小花费爬楼梯.swift"; sourceTree = "<group>"; };
		ED380A90251DC179004FD591 /* 1.两数之和.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "1.两数之和.swift"; sourceTree = "<group>"; };
		ED380A93251DD221004FD591 /* 11.盛最多水的容器.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "11.盛最多水的容器.swift"; sourceTree = "<group>"; };
		ED380A96251DDFB4004FD591 /* 283.移动零.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "283.移动零.swift"; sourceTree = "<group>"; };
		ED380A99251DEDB2004FD591 /* 70.爬楼梯.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "70.爬楼梯.swift"; sourceTree = "<group>"; };
		ED55290F2514B4C800B225F8 /* LeetCodeTrain */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = LeetCodeTrain; sourceTree = BUILT_PRODUCTS_DIR; };
		ED5529122514B4C800B225F8 /* main.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
		ED5529192514B4F800B225F8 /* 146.lru缓存机制.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "146.lru缓存机制.swift"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		ED55290C2514B4C800B225F8 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		3465E82F2662247000DB5C3B /* 深度优先搜索 */ = {
			isa = PBXGroup;
			children = (
				3465E830266224A300DB5C3B /* 17. 电话号码的字母组合.swift */,
				3465E83426624BA100DB5C3B /* 101. 对称二叉树.swift */,
				3465E83C266390FF00DB5C3B /* 200. 岛屿的数量.swift */,
				3465E83F2663AC1700DB5C3B /* 207. 可程表.swift */,
				3465E84226648E0100DB5C3B /* 124. 二叉树中的最大路径和.swift */,
				3465E8472664C34600DB5C3B /* 301. 删除无效的括号.swift */,
				3465E8382662529100DB5C3B /* 114. 二叉树展开为链表.swift */,
			);
			path = "深度优先搜索";
			sourceTree = "<group>";
		};
		3465E84526648E7E00DB5C3B /* 回溯 */ = {
			isa = PBXGroup;
			children = (
				346FC10D256141310020380D /* 22.括号生成.swift */,
			);
			path = "回溯";
			sourceTree = "<group>";
		};
		3465E84D2665C8E100DB5C3B /* 二分查找 */ = {
			isa = PBXGroup;
			children = (
				347E0B8825A544A6009138AA /* 367.有效的完全平方数.swift */,
				3465E84E2665C98D00DB5C3B /* 4. 寻找两个正序数组的中位数.swift */,
				34977A9F25C68F440040C7C1 /* 33.搜索旋转排序数组.swift */,
				34F797B726564EDC00D09696 /* 34. 在排序数组中查找元素的第一个和最后一个位置.swift */,
				3465E8522665EC9000DB5C3B /* 240. 搜索二维矩阵2.swift */,
			);
			path = "二分查找";
			sourceTree = "<group>";
		};
		3465E859266616DC00DB5C3B /* 堆 */ = {
			isa = PBXGroup;
			children = (
				3465E855266614BE00DB5C3B /* 215. 数组中的第k个最大元素.swift */,
				34FEAF9D2668DBB100548EC8 /* 347. 前k个高频元素.swift */,
				34FEAF8E2667B23E00548EC8 /* Train. 大顶堆.swift */,
				34FEAF992668D05C00548EC8 /* Train. 小顶堆.swift */,
				34FEAF952668C1B000548EC8 /* Train. 批量建堆.swift */,
			);
			path = "堆";
			sourceTree = "<group>";
		};
		34ED283B266F5FBC006D4020 /* 0-1背包问题 */ = {
			isa = PBXGroup;
			children = (
			);
			path = "0-1背包问题";
			sourceTree = "<group>";
		};
		34ED283C266F5FD1006D4020 /* 完全背包 */ = {
			isa = PBXGroup;
			children = (
				347E0AE025A1AF02009138AA /* 1143_3背包问题01.swift */,
			);
			path = "完全背包";
			sourceTree = "<group>";
		};
		34ED283D266F5FE4006D4020 /* 打家劫舍 */ = {
			isa = PBXGroup;
			children = (
				3424B38D25B0A1EE007FB1E4 /* 198.打家劫舍.swift */,
				3424B39025B0AA80007FB1E4 /* 213.打家劫舍-ii.swift */,
			);
			path = "打家劫舍";
			sourceTree = "<group>";
		};
		34ED283E266F5FFF006D4020 /* 股票问题 */ = {
			isa = PBXGroup;
			children = (
				3424B3BD25B4012A007FB1E4 /* 121.买卖股票的最佳时机.swift */,
				34CBFB8A25A685080039F4AE /* 122.买卖股票的最佳时机-ii.swift */,
				3424B3C025B4118C007FB1E4 /* 123.买卖股票的最佳时机-iii.swift */,
				3424B3C625B49930007FB1E4 /* 188.买卖股票的最佳时机-iv.swift */,
				3424B3C325B48A3C007FB1E4 /* 309.最佳买卖股票时机含冷冻期.swift */,
			);
			path = "股票问题";
			sourceTree = "<group>";
		};
		34ED283F266F604B006D4020 /* 子序列问题 */ = {
			isa = PBXGroup;
			children = (
			);
			path = "子序列问题";
			sourceTree = "<group>";
		};
		34ED2844266F696F006D4020 /* 基础题 */ = {
			isa = PBXGroup;
			children = (
				34ED2840266F6081006D4020 /* 509. 斐波那契数.swift */,
				ED380A99251DEDB2004FD591 /* 70.爬楼梯.swift */,
				4BB4BC6E266F748200C4BBC9 /* 746. 使用最小花费爬楼梯.swift */,
			);
			path = "基础题";
			sourceTree = "<group>";
		};
		34F08E2D2643671800E50E61 /* 二叉树 */ = {
			isa = PBXGroup;
			children = (
				346FC0FE2560D4C10020380D /* 94.二叉树的中序遍历.swift */,
				34FB7A04256180DE00DE1A5A /* 98.验证二叉搜索树.swift */,
				34AA7C75256A9D42007C56C0 /* 102.二叉树的层次遍历.swift */,
				34FB7A0725618EA500DE1A5A /* 104.二叉树的最大深度.swift */,
				34AA7C6F256A8493007C56C0 /* 105.从前序与中序遍历序列构造二叉树.swift */,
				34AA7C662568F8A0007C56C0 /* 111.二叉树的最小深度.swift */,
				346FC101256120C40020380D /* 144.二叉树的前序遍历.swift */,
				34FB7A012561767B00DE1A5A /* 226.翻转二叉树.swift */,
				34AA7C6C256A0641007C56C0 /* 236.二叉树的最近公共祖先.swift */,
				34AA7C69256930A9007C56C0 /* 297.二叉树的序列化与反序列化.swift */,
				346FC10A256127E90020380D /* 429.n叉树的层序遍历.swift */,
				346FC107256126230020380D /* 589.n叉树的前序遍历.swift */,
				346FC1042561220A0020380D /* 590.n叉树的后序遍历.swift */,
				34F08E05264000AA00E50E61 /* 剑指 Offer 7 重建二叉树.swift */,
				34F08E092640D50900E50E61 /* 剑指 Offer 8 二叉树的下一个节点.swift */,
				34F08E0C2640DA1100E50E61 /* 剑指 Offer 26 树的子结构.swift */,
				34F08E0F2641671400E50E61 /* 剑指 Offer 32 从上到下打印二叉树.swift */,
				34F08E122641873700E50E61 /* 剑指 Offer 32 从上到下打印二叉树 2.swift */,
				34F08E1526419AE400E50E61 /* 剑指 Offer 32 从上到下打印二叉树3.swift */,
				34F08E1826419D0600E50E61 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.swift */,
				34F08E1B2642455D00E50E61 /* 剑指 Offer 34. 二叉树中和为某一值的路径.swift */,
				34F08E1E26427A6C00E50E61 /* 剑指 Offer 37. 序列化二叉树.swift */,
				34F08E212642A6C100E50E61 /* 剑指 Offer 54. 二叉搜索树的第k大节点.swift */,
				34F08E242642AEF500E50E61 /* 剑指 Offer 55 - I. 二叉树的深度.swift */,
				34F08E272642B0E600E50E61 /* 剑指 Offer 55 - II. 平衡二叉树.swift */,
			);
			path = "二叉树";
			sourceTree = "<group>";
		};
		34F08E2E2643673100E50E61 /* 动态规划 */ = {
			isa = PBXGroup;
			children = (
				34ED2844266F696F006D4020 /* 基础题 */,
				34ED283F266F604B006D4020 /* 子序列问题 */,
				34ED283E266F5FFF006D4020 /* 股票问题 */,
				34ED283D266F5FE4006D4020 /* 打家劫舍 */,
				34ED283C266F5FD1006D4020 /* 完全背包 */,
				34ED283B266F5FBC006D4020 /* 0-1背包问题 */,
				3453C77B25AB5D2C00A15CE3 /* 152.乘积最大子数组.swift */,
				347E0A66259F2C51009138AA /* 53.最大子序和.swift */,
				34ED2837266F5BA9006D4020 /* 动态规划笔记.swift */,
				3465E84A2664D70500DB5C3B /* 494.目标和.swift */,
				34ED2824266DFE2A006D4020 /* 221. 最大正方形.swift */,
				34ED282A266E5551006D4020 /* 647. 回文字串.swift */,
				34ED2827266E46EE006D4020 /* 85. 最大矩形.swift */,
				347E0A6C25A013B5009138AA /* 1143.最长公共子序列.swift */,
				34DD1EAA266B563400C69DA5 /* 96. 不同的二叉搜索树.swift */,
				34DD1EAD266B625600C69DA5 /* 139. 单词拆分.swift */,
				34FEAFA4266A266D00548EC8 /* 338. 比特位计数.swift */,
				34ED282D266F0B4F006D4020 /* 279. 完全平方数.swift */,
				347E0A69259F68DD009138AA /* 300.最长上升子序列.swift */,
				34F797C62658A86000D09696 /* 62. 不同路径.swift */,
				34F797C92658B43E00D09696 /* 64. 最小路径和.swift */,
				34AA7C7E256ABE24007C56C0 /* 322.零钱兑换.swift */,
				34CBFB8D25A6AA160039F4AE /* 455.分发饼干.swift */,
				34CBFB8725A60FD20039F4AE /* 860.柠檬水找零.swift */,
				3453C76C25AAAD1000A15CE3 /* 874.模拟行走机器人.swift */,
				347E0A6F25A185C2009138AA /* 1143-2.最长公共子串.swift */,
				3439ECA92636A1D100E84926 /* 72.编辑距离.swift */,
				34F08E2A2642CA9600E50E61 /* 剑指 Offer 14- I. 剪绳子.swift */,
				3439ECAC2636A69200E84926 /* 5.最长回文子串.swift */,
				341D6080263576DC0036FDF5 /* 剑指 Offer 47 礼物的最大价值.swift */,
			);
			path = "动态规划";
			sourceTree = "<group>";
		};
		34F08E2F264367B400E50E61 /* 数组 */ = {
			isa = PBXGroup;
			children = (
				ED380A93251DD221004FD591 /* 11.盛最多水的容器.swift */,
				344EED18254EB7FE00B083FE /* 88.合并两个有序数组.swift */,
				34F08E8E26439A3100E50E61 /* 75.颜色分类.swift */,
				34F08E912643CCFC00E50E61 /* 面试题 16.16. 部分排序.swift */,
				ED380A90251DC179004FD591 /* 1.两数之和.swift */,
				34F797BD26566A1F00D09696 /* 39. 组合总和.swift */,
				34F797C02657630300D09696 /* 48. 旋转图像.swift */,
				34F797CC2658B7C900D09696 /* 78. 子集.swift */,
				34F797CF2658EAC800D09696 /* 79. 单词搜索.swift */,
				34F797C32657708500D09696 /* 56. 合并区间.swift */,
				34F797D5265923B000D09696 /* 448. 找到所有数组中消失的数字.swift */,
				34F797D226590BBD00D09696 /* 287 选找重复数.swift */,
				34F797D8265A0F2300D09696 /* 560. 和为k的子数组.swift */,
				344667B325345E38005654F4 /* 15.三数之和.swift */,
				34977AA225C6A4F20040C7C1 /* 74.搜索二维矩阵.swift */,
				34F08E942643E64F00E50E61 /* 数组总结.swift */,
			);
			path = "数组";
			sourceTree = "<group>";
		};
		34F08E30264367C400E50E61 /* 链表 */ = {
			isa = PBXGroup;
			children = (
				343411C3253C779000887E80 /* 141.环形链表.swift */,
				34F08E972643E90300E50E61 /* 链表总结.swift */,
				343411C6253C8A3F00887E80 /* 142.环形链表-ii.swift */,
				3451406B25371F3500DC3CC0 /* 206.反转链表.swift */,
				34F08E9A2643E9A700E50E61 /* 203. 移除链表元素.swift */,
				34F08F422644AEA100E50E61 /* 2. 两数相加.swift */,
				34F08F452644D05300E50E61 /* 160. 相交链表.swift */,
				34F797BA265664BB00D09696 /* 19. 删除链表的倒数第N个结点.swift */,
				34F797DB265A3BBF00D09696 /* 23. 合并K个升序链表.swift */,
				34F797DE265A4D1C00D09696 /* 148. 排序链表.swift */,
				34D0C7A9264794C7005BF9ED /* 86. 分隔链表.swift */,
				34D0C7AC2647D3EC005BF9ED /* 234. 回文链表.swift */,
				34A5AD38254A3359006CB80F /* 21.合并两个有序链表.swift */,
				3414B28F25391452008A4C67 /* 24.两两交换链表中的节点.swift */,
				343411C9253C93E000887E80 /* 25.k-个一组翻转链表.swift */,
			);
			path = "链表";
			sourceTree = "<group>";
		};
		34F08E312643688800E50E61 /* 栈 */ = {
			isa = PBXGroup;
			children = (
				344EED1E254ECC7700B083FE /* 20.有效的括号.swift */,
				344EED21254ED3FE00B083FE /* 155.最小栈.swift */,
				34F097CB2650D61C00FDEC05 /* 739.每日温度.swift */,
				3453C77525AAEB3D00A15CE3 /* 32.最长有效括号.swift */,
				34F097CF2651006700FDEC05 /* 42. 接雨水.swift */,
				344EED24254EE5FA00B083FE /* 84.柱状图中最大的矩形.swift */,
				3465AC762647EF5000A8E6D3 /* 栈的总结.swift */,
			);
			path = "栈";
			sourceTree = "<group>";
		};
		34F097C82650BB6E00FDEC05 /* 队列 */ = {
			isa = PBXGroup;
			children = (
				344EED27254EED2C00B083FE /* 239.滑动窗口最大值.swift */,
				34F097D326511A7C00FDEC05 /* 队列的总结.swift */,
			);
			path = "队列";
			sourceTree = "<group>";
		};
		34F797E1265A572700D09696 /* 排序 */ = {
			isa = PBXGroup;
			children = (
				34FEAFA02669FD0A00548EC8 /* Train. 快速排序.swift */,
			);
			path = "排序";
			sourceTree = "<group>";
		};
		34F797E3265A67E100D09696 /* 分治 */ = {
			isa = PBXGroup;
			children = (
				34977AAC25C6DFB60040C7C1 /* 169.多数元素.swift */,
			);
			path = "分治";
			sourceTree = "<group>";
		};
		34FEAF9126688E9F00548EC8 /* 优先队列 */ = {
			isa = PBXGroup;
			children = (
			);
			path = "优先队列";
			sourceTree = "<group>";
		};
		34FEAF9226688F1200548EC8 /* 红黑树 */ = {
			isa = PBXGroup;
			children = (
			);
			path = "红黑树";
			sourceTree = "<group>";
		};
		ED5529062514B4C800B225F8 = {
			isa = PBXGroup;
			children = (
				ED5529112514B4C800B225F8 /* LeetCodeTrain */,
				ED5529102514B4C800B225F8 /* Products */,
			);
			sourceTree = "<group>";
		};
		ED5529102514B4C800B225F8 /* Products */ = {
			isa = PBXGroup;
			children = (
				ED55290F2514B4C800B225F8 /* LeetCodeTrain */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		ED5529112514B4C800B225F8 /* LeetCodeTrain */ = {
			isa = PBXGroup;
			children = (
				3465E84D2665C8E100DB5C3B /* 二分查找 */,
				3465E84526648E7E00DB5C3B /* 回溯 */,
				3465E82F2662247000DB5C3B /* 深度优先搜索 */,
				34F797E1265A572700D09696 /* 排序 */,
				34F797E3265A67E100D09696 /* 分治 */,
				34F08E2E2643673100E50E61 /* 动态规划 */,
				34F08E2F264367B400E50E61 /* 数组 */,
				34F08E30264367C400E50E61 /* 链表 */,
				34F097C82650BB6E00FDEC05 /* 队列 */,
				34F08E312643688800E50E61 /* 栈 */,
				34F08E2D2643671800E50E61 /* 二叉树 */,
				3465E859266616DC00DB5C3B /* 堆 */,
				34FEAF9226688F1200548EC8 /* 红黑树 */,
				34FEAF9126688E9F00548EC8 /* 优先队列 */,
				341D5FA92635017B0036FDF5 /* 151.翻转字符串里的单词.swift */,
				341D6065263556CC0036FDF5 /* 3.无重复字符的最长子串.swift */,
				3453C77225AAE2DE00A15CE3 /* 45.跳跃游戏-ii.swift */,
				34FEB49225409D5700B3A94E /* 26.删除排序数组中的重复项.swift */,
				34FCA56D255CC6ED002BE4A8 /* 49.字母异位词分组.swift */,
				34E8E6E125735F2000D64401 /* 51.n皇后.swift */,
				3453C76F25AAD0F100A15CE3 /* 55.跳跃游戏.swift */,
				344EED1B254EC76500B083FE /* 66.加一.swift */,
				347E0B8525A4B98F009138AA /* 69.x-的平方根.swift */,
				34AA7C72256A9B3D007C56C0 /* 77.组合.swift */,
				3453C77825AAFABC00A15CE3 /* 120.三角形最小路径和.swift */,
				ED5529192514B4F800B225F8 /* 146.lru缓存机制.swift */,
				34560508254798E000E27201 /* 189.旋转数组.swift */,
				34FCA56A255CAAFB002BE4A8 /* 242.有效的字母异位词.swift */,
				ED380A96251DDFB4004FD591 /* 283.移动零.swift */,
				34AA7C78256AA328007C56C0 /* 433.最小基因变化.swift */,
				34AA7C7B256ABA5E007C56C0 /* 515.在每个树行中找最大值.swift */,
				34A783E425583FD9002A5294 /* 641.设计循环双端队列.swift */,
				34983F532598DBD700A3FEAD /* BruteFore01.swift */,
				340B0CCF25729FDD00AD790A /* hannota.swift */,
				3439DBD2254DAF2200B88924 /* LeetCodeTrain-Bridging-Header.h */,
				ED5529122514B4C800B225F8 /* main.swift */,
				34977AA525C6B1B90040C7C1 /* 153.寻找旋转排序数组中的最小值.swift */,
			);
			path = LeetCodeTrain;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		ED55290E2514B4C800B225F8 /* LeetCodeTrain */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = ED5529162514B4C800B225F8 /* Build configuration list for PBXNativeTarget "LeetCodeTrain" */;
			buildPhases = (
				ED55290B2514B4C800B225F8 /* Sources */,
				ED55290C2514B4C800B225F8 /* Frameworks */,
				ED55290D2514B4C800B225F8 /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = LeetCodeTrain;
			productName = LeetCodeTrain;
			productReference = ED55290F2514B4C800B225F8 /* LeetCodeTrain */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		ED5529072514B4C800B225F8 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftUpdateCheck = 1150;
				LastUpgradeCheck = 1150;
				ORGANIZATIONNAME = rjb;
				TargetAttributes = {
					ED55290E2514B4C800B225F8 = {
						CreatedOnToolsVersion = 11.5;
						LastSwiftMigration = 1210;
					};
				};
			};
			buildConfigurationList = ED55290A2514B4C800B225F8 /* Build configuration list for PBXProject "LeetCodeTrain" */;
			compatibilityVersion = "Xcode 9.3";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = ED5529062514B4C800B225F8;
			productRefGroup = ED5529102514B4C800B225F8 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				ED55290E2514B4C800B225F8 /* LeetCodeTrain */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		ED55290B2514B4C800B225F8 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				3465E84F2665C98D00DB5C3B /* 4. 寻找两个正序数组的中位数.swift in Sources */,
				34AA7C73256A9B3D007C56C0 /* 77.组合.swift in Sources */,
				34F797BB265664BB00D09696 /* 19. 删除链表的倒数第N个结点.swift in Sources */,
				344EED1F254ECC7700B083FE /* 20.有效的括号.swift in Sources */,
				34E8E6E225735F2000D64401 /* 51.n皇后.swift in Sources */,
				341D5FAA2635017B0036FDF5 /* 151.翻转字符串里的单词.swift in Sources */,
				34ED282E266F0B4F006D4020 /* 279. 完全平方数.swift in Sources */,
				34F097D426511A7C00FDEC05 /* 队列的总结.swift in Sources */,
				346FC10B256127E90020380D /* 429.n叉树的层序遍历.swift in Sources */,
				343411C4253C779000887E80 /* 141.环形链表.swift in Sources */,
				3465E84B2664D70500DB5C3B /* 494.目标和.swift in Sources */,
				343411CA253C93E000887E80 /* 25.k-个一组翻转链表.swift in Sources */,
				34F08E06264000AA00E50E61 /* 剑指 Offer 7 重建二叉树.swift in Sources */,
				34977AA025C68F440040C7C1 /* 33.搜索旋转排序数组.swift in Sources */,
				343411C7253C8A3F00887E80 /* 142.环形链表-ii.swift in Sources */,
				3414B29025391452008A4C67 /* 24.两两交换链表中的节点.swift in Sources */,
				34F08E1926419D0600E50E61 /* 剑指 Offer 33. 二叉搜索树的后序遍历序列.swift in Sources */,
				34F08E2B2642CA9600E50E61 /* 剑指 Offer 14- I. 剪绳子.swift in Sources */,
				ED5529132514B4C800B225F8 /* main.swift in Sources */,
				34FEAF9E2668DBB100548EC8 /* 347. 前k个高频元素.swift in Sources */,
				34FEB49325409D5700B3A94E /* 26.删除排序数组中的重复项.swift in Sources */,
				34F797C42657708500D09696 /* 56. 合并区间.swift in Sources */,
				34ED2838266F5BA9006D4020 /* 动态规划笔记.swift in Sources */,
				34F08E9B2643E9A700E50E61 /* 203. 移除链表元素.swift in Sources */,
				34F797C72658A86000D09696 /* 62. 不同路径.swift in Sources */,
				34F08E952643E64F00E50E61 /* 数组总结.swift in Sources */,
				3453C77325AAE2DE00A15CE3 /* 45.跳跃游戏-ii.swift in Sources */,
				3465E84326648E0100DB5C3B /* 124. 二叉树中的最大路径和.swift in Sources */,
				346FC10E256141310020380D /* 22.括号生成.swift in Sources */,
				34977AAD25C6DFB60040C7C1 /* 169.多数元素.swift in Sources */,
				ED380A9A251DEDB2004FD591 /* 70.爬楼梯.swift in Sources */,
				3465E8482664C34600DB5C3B /* 301. 删除无效的括号.swift in Sources */,
				3465E8532665EC9000DB5C3B /* 240. 搜索二维矩阵2.swift in Sources */,
				347E0B8925A544A6009138AA /* 367.有效的完全平方数.swift in Sources */,
				3453C76D25AAAD1000A15CE3 /* 874.模拟行走机器人.swift in Sources */,
				34F08E0A2640D50900E50E61 /* 剑指 Offer 8 二叉树的下一个节点.swift in Sources */,
				34AA7C6D256A0641007C56C0 /* 236.二叉树的最近公共祖先.swift in Sources */,
				34F097CC2650D61C00FDEC05 /* 739.每日温度.swift in Sources */,
				34AA7C7F256ABE24007C56C0 /* 322.零钱兑换.swift in Sources */,
				ED380A94251DD221004FD591 /* 11.盛最多水的容器.swift in Sources */,
				34FB7A0825618EA500DE1A5A /* 104.二叉树的最大深度.swift in Sources */,
				34AA7C76256A9D42007C56C0 /* 102.二叉树的层次遍历.swift in Sources */,
				34F08E8F26439A3100E50E61 /* 75.颜色分类.swift in Sources */,
				34F797DC265A3BBF00D09696 /* 23. 合并K个升序链表.swift in Sources */,
				34AA7C672568F8A0007C56C0 /* 111.二叉树的最小深度.swift in Sources */,
				34F097D02651006700FDEC05 /* 42. 接雨水.swift in Sources */,
				340B0CD025729FDD00AD790A /* hannota.swift in Sources */,
				34977AA325C6A4F20040C7C1 /* 74.搜索二维矩阵.swift in Sources */,
				3465AC772647EF5000A8E6D3 /* 栈的总结.swift in Sources */,
				34977AA625C6B1B90040C7C1 /* 153.寻找旋转排序数组中的最小值.swift in Sources */,
				344667B425345E38005654F4 /* 15.三数之和.swift in Sources */,
				341D6066263556CC0036FDF5 /* 3.无重复字符的最长子串.swift in Sources */,
				34FCA56E255CC6ED002BE4A8 /* 49.字母异位词分组.swift in Sources */,
				3424B3C125B4118C007FB1E4 /* 123.买卖股票的最佳时机-iii.swift in Sources */,
				34F08E102641671400E50E61 /* 剑指 Offer 32 从上到下打印二叉树.swift in Sources */,
				34F08E222642A6C100E50E61 /* 剑指 Offer 54. 二叉搜索树的第k大节点.swift in Sources */,
				347E0B8625A4B98F009138AA /* 69.x-的平方根.swift in Sources */,
				346FC102256120C40020380D /* 144.二叉树的前序遍历.swift in Sources */,
				346FC108256126230020380D /* 589.n叉树的前序遍历.swift in Sources */,
				ED55291A2514B4F800B225F8 /* 146.lru缓存机制.swift in Sources */,
				346FC1052561220A0020380D /* 590.n叉树的后序遍历.swift in Sources */,
				3465E8402663AC1700DB5C3B /* 207. 可程表.swift in Sources */,
				34F797D02658EAC800D09696 /* 79. 单词搜索.swift in Sources */,
				34ED282B266E5551006D4020 /* 647. 回文字串.swift in Sources */,
				3465E8392662529100DB5C3B /* 114. 二叉树展开为链表.swift in Sources */,
				3453C77925AAFABC00A15CE3 /* 120.三角形最小路径和.swift in Sources */,
				3465E83D266390FF00DB5C3B /* 200. 岛屿的数量.swift in Sources */,
				347E0A67259F2C51009138AA /* 53.最大子序和.swift in Sources */,
				ED380A97251DDFB4004FD591 /* 283.移动零.swift in Sources */,
				34ED2841266F6081006D4020 /* 509. 斐波那契数.swift in Sources */,
				34F08E252642AEF500E50E61 /* 剑指 Offer 55 - I. 二叉树的深度.swift in Sources */,
				34F08F462644D05300E50E61 /* 160. 相交链表.swift in Sources */,
				34CBFB8B25A685080039F4AE /* 122.买卖股票的最佳时机-ii.swift in Sources */,
				34F797D9265A0F2300D09696 /* 560. 和为k的子数组.swift in Sources */,
				344EED1C254EC76500B083FE /* 66.加一.swift in Sources */,
				34DD1EAE266B625600C69DA5 /* 139. 单词拆分.swift in Sources */,
				34F08E982643E90300E50E61 /* 链表总结.swift in Sources */,
				3424B3C425B48A3C007FB1E4 /* 309.最佳买卖股票时机含冷冻期.swift in Sources */,
				34F797CA2658B43E00D09696 /* 64. 最小路径和.swift in Sources */,
				34ED2825266DFE2A006D4020 /* 221. 最大正方形.swift in Sources */,
				3451406C25371F3500DC3CC0 /* 206.反转链表.swift in Sources */,
				34F797B826564EDC00D09696 /* 34. 在排序数组中查找元素的第一个和最后一个位置.swift in Sources */,
				3439ECAA2636A1D100E84926 /* 72.编辑距离.swift in Sources */,
				34D0C7AD2647D3EC005BF9ED /* 234. 回文链表.swift in Sources */,
				347E0A6A259F68DD009138AA /* 300.最长上升子序列.swift in Sources */,
				34F08F432644AEA100E50E61 /* 2. 两数相加.swift in Sources */,
				34F797CD2658B7C900D09696 /* 78. 子集.swift in Sources */,
				34FEAF9A2668D05C00548EC8 /* Train. 小顶堆.swift in Sources */,
				34AA7C70256A8493007C56C0 /* 105.从前序与中序遍历序列构造二叉树.swift in Sources */,
				34DD1EAB266B563400C69DA5 /* 96. 不同的二叉搜索树.swift in Sources */,
				3424B3C725B49931007FB1E4 /* 188.买卖股票的最佳时机-iv.swift in Sources */,
				3465E83526624BA100DB5C3B /* 101. 对称二叉树.swift in Sources */,
				344EED25254EE5FA00B083FE /* 84.柱状图中最大的矩形.swift in Sources */,
				3424B3BE25B4012A007FB1E4 /* 121.买卖股票的最佳时机.swift in Sources */,
				34FCA56B255CAAFB002BE4A8 /* 242.有效的字母异位词.swift in Sources */,
				34FB7A022561767B00DE1A5A /* 226.翻转二叉树.swift in Sources */,
				34FEAF8F2667B23E00548EC8 /* Train. 大顶堆.swift in Sources */,
				34FEAFA5266A266D00548EC8 /* 338. 比特位计数.swift in Sources */,
				347E0AE125A1AF02009138AA /* 1143_3背包问题01.swift in Sources */,
				34FEAF962668C1B000548EC8 /* Train. 批量建堆.swift in Sources */,
				34983F542598DBD700A3FEAD /* BruteFore01.swift in Sources */,
				34F08E1C2642455D00E50E61 /* 剑指 Offer 34. 二叉树中和为某一值的路径.swift in Sources */,
				34ED2828266E46EE006D4020 /* 85. 最大矩形.swift in Sources */,
				3453C77625AAEB3D00A15CE3 /* 32.最长有效括号.swift in Sources */,
				3453C77025AAD0F100A15CE3 /* 55.跳跃游戏.swift in Sources */,
				34F08E0D2640DA1100E50E61 /* 剑指 Offer 26 树的子结构.swift in Sources */,
				34F797DF265A4D1C00D09696 /* 148. 排序链表.swift in Sources */,
				3453C77C25AB5D2C00A15CE3 /* 152.乘积最大子数组.swift in Sources */,
				34CBFB8E25A6AA160039F4AE /* 455.分发饼干.swift in Sources */,
				34F797BE26566A1F00D09696 /* 39. 组合总和.swift in Sources */,
				34560509254798E000E27201 /* 189.旋转数组.swift in Sources */,
				3465E856266614BE00DB5C3B /* 215. 数组中的第k个最大元素.swift in Sources */,
				344EED22254ED3FE00B083FE /* 155.最小栈.swift in Sources */,
				34CBFB8825A60FD20039F4AE /* 860.柠檬水找零.swift in Sources */,
				344EED19254EB7FE00B083FE /* 88.合并两个有序数组.swift in Sources */,
				347E0A6D25A013B5009138AA /* 1143.最长公共子序列.swift in Sources */,
				34F08E922643CCFC00E50E61 /* 面试题 16.16. 部分排序.swift in Sources */,
				3439ECAD2636A69200E84926 /* 5.最长回文子串.swift in Sources */,
				34F08E132641873700E50E61 /* 剑指 Offer 32 从上到下打印二叉树 2.swift in Sources */,
				34A783E525583FD9002A5294 /* 641.设计循环双端队列.swift in Sources */,
				347E0A7025A185C2009138AA /* 1143-2.最长公共子串.swift in Sources */,
				34FB7A05256180DE00DE1A5A /* 98.验证二叉搜索树.swift in Sources */,
				34F797C12657630300D09696 /* 48. 旋转图像.swift in Sources */,
				34F797D6265923B000D09696 /* 448. 找到所有数组中消失的数字.swift in Sources */,
				34FEAFA12669FD0A00548EC8 /* Train. 快速排序.swift in Sources */,
				34F08E282642B0E600E50E61 /* 剑指 Offer 55 - II. 平衡二叉树.swift in Sources */,
				34AA7C79256AA328007C56C0 /* 433.最小基因变化.swift in Sources */,
				34A5AD39254A3359006CB80F /* 21.合并两个有序链表.swift in Sources */,
				346FC0FF2560D4C10020380D /* 94.二叉树的中序遍历.swift in Sources */,
				34AA7C6A256930A9007C56C0 /* 297.二叉树的序列化与反序列化.swift in Sources */,
				34F08E1F26427A6C00E50E61 /* 剑指 Offer 37. 序列化二叉树.swift in Sources */,
				341D6081263576DC0036FDF5 /* 剑指 Offer 47 礼物的最大价值.swift in Sources */,
				34AA7C7C256ABA5E007C56C0 /* 515.在每个树行中找最大值.swift in Sources */,
				344EED28254EED2C00B083FE /* 239.滑动窗口最大值.swift in Sources */,
				3424B38E25B0A1EE007FB1E4 /* 198.打家劫舍.swift in Sources */,
				3465E831266224A300DB5C3B /* 17. 电话号码的字母组合.swift in Sources */,
				34F08E1626419AE400E50E61 /* 剑指 Offer 32 从上到下打印二叉树3.swift in Sources */,
				34F797D326590BBD00D09696 /* 287 选找重复数.swift in Sources */,
				ED380A91251DC179004FD591 /* 1.两数之和.swift in Sources */,
				3424B39125B0AA80007FB1E4 /* 213.打家劫舍-ii.swift in Sources */,
				34D0C7AA264794C7005BF9ED /* 86. 分隔链表.swift in Sources */,
				4BB4BC6F266F748200C4BBC9 /* 746. 使用最小花费爬楼梯.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		ED5529142514B4C800B225F8 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.15;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		ED5529152514B4C800B225F8 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.15;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
			};
			name = Release;
		};
		ED5529172514B4C800B225F8 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_IDENTITY = "-";
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = 7386VQTH7S;
				ENABLE_HARDENED_RUNTIME = YES;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
					"@loader_path/../Frameworks",
				);
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OBJC_BRIDGING_HEADER = "LeetCodeTrain/LeetCodeTrain-Bridging-Header.h";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		ED5529182514B4C800B225F8 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_IDENTITY = "-";
				CODE_SIGN_STYLE = Automatic;
				DEVELOPMENT_TEAM = 7386VQTH7S;
				ENABLE_HARDENED_RUNTIME = YES;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
					"@loader_path/../Frameworks",
				);
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OBJC_BRIDGING_HEADER = "LeetCodeTrain/LeetCodeTrain-Bridging-Header.h";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		ED55290A2514B4C800B225F8 /* Build configuration list for PBXProject "LeetCodeTrain" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				ED5529142514B4C800B225F8 /* Debug */,
				ED5529152514B4C800B225F8 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		ED5529162514B4C800B225F8 /* Build configuration list for PBXNativeTarget "LeetCodeTrain" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				ED5529172514B4C800B225F8 /* Debug */,
				ED5529182514B4C800B225F8 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = ED5529072514B4C800B225F8 /* Project object */;
}
